<?php

namespace App\{{ namespace }}\{{ domain }};

use App\{{ namespace }}\{{ domain }}\DataTransferObjects\{{ class }}Data;
use App\{{ namespace }}\{{ domain }}\Events\{{ class }}Created;
use App\{{ namespace }}\{{ domain }}\Events\{{ class }}Deleted;
use App\{{ namespace }}\{{ domain }}\Events\{{ class }}Updated;
use Spatie\EventSourcing\AggregateRoots\AggregateRoot;

class {{ class }}AggregateRoot extends AggregateRoot
{
    public function create({{ class }}Data ${{ id }}Data): self
    {
        $this->recordThat(new {{ class }}Created(
            {{ id }}{{ primary_key:uppercase }}: $this->uuid(),
            {{ id }}Data: ${{ id }}Data,
            createdAt: now(),
        ));

        return $this;
    }

    public function update({{ class }}Data ${{ id }}Data): self
    {
        $this->recordThat(new {{ class }}Updated(
            {{ id }}{{ primary_key:uppercase }}: $this->uuid(),
            {{ id }}Data: ${{ id }}Data,
            createdAt: now(),
        ));

        return $this;
    }

    public function remove(): self
    {
        $this->recordThat(new {{ class }}Deleted(
            {{ id }}{{ primary_key:uppercase }}: $this->uuid(),
            createdAt: now(),
        ));

        return $this;
    }
}
